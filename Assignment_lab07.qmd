---
title: "Assignment lab 07"
format: html
editor: visual
---

## Load libraries

```{r}
#| echo: FALSE
#| message: false

library("tidyverse")
library("broom")
library("cowplot")
```

## Load data

```{r}
#| echo: false 
#| eval: false
#| message: false

biopsy <- read_csv("https://wilkelab.org/classes/SDS348/data_sets/biopsy.csv")

```

## Performing a PCA plot

For making a PCA plot, we need to do the following three things:

1.  Look at the data in PC coordinates.

2.  Look at the rotation matrix.

3.  Look at the variance explained by each PC

## Look at the data in PC coordinates

```{r}
#| label: "Look-at-the-data-in-PC-coordinates"

pca_fit <- biopsy |> 
  select(where(is.numeric)) |>  # retain only numeric columns
  prcomp(scale = TRUE) # do PCA on scaled data

pca_fit


```

### Plot the data in PC coordinates

```{r}
#| label: "Plot-data-in-PC-coordinates"
#| fig-width: 6
#| fig-height: 5

pca_fit |> 
  augment(biopsy) |>
  ggplot(aes(.fittedPC1, .fittedPC2, color = outcome)) + 
  geom_point(size = 1.5) +
  scale_color_manual(
    values = c(malignant = "#D55E00", benign = "#0072B2")
  ) +
  theme_half_open(12) + background_grid()

```

## Rotation matrix

```{r}
pca_fit |> 
  tidy(matrix = "rotation") |> 
  sample_n(10)

```

### Plotting the rotation matrix

```{r}
#| fig-width: 7
#| fig-height: 6

# define arrow style for plotting
arrow_style <- arrow(
  angle = 20, ends = "first", type = "closed", length = grid::unit(8, "pt")
)

# plot rotation matrix
pca_fit %>%
  tidy(matrix = "rotation") |> 
  pivot_wider(names_from = "PC", names_prefix = "PC", values_from = "value") |> 
  ggplot(aes(PC1, PC2)) +
  geom_segment(xend = 0, yend = 0, arrow = arrow_style) +
  geom_text(
    aes(label = column),
    hjust = 1, nudge_x = -0.02, 
    color = "#904C2F"
  ) +
  xlim(-1.25, .5) + ylim(-.5, 1) +
  coord_fixed() + # fix aspect ratio to 1:1
  theme_minimal_grid(12)
```

### 

## Look at the variance explained by each PC

We will now extract the variance that is explained by each PC.

```{r}
#| label: "Extract-variance-using-tidy-function-from-broom"

pca_fit |> 
  tidy(matrix = "eigenvalues")
```

### Plotting a histogram

```{r}
#| label: "Histogram-for-variance"

pca_fit |> 
  tidy(matrix = "eigenvalues") |> 
  ggplot(aes(PC, percent)) +
  geom_col(fill = "#56B4E9", alpha = 0.8) +
  scale_x_continuous(breaks = 1:9) +
  scale_y_continuous(
    labels = scales::percent_format(),
    expand = expansion(mult = c(0, 0.01))
  ) +
  theme_minimal_hgrid(12)

```
